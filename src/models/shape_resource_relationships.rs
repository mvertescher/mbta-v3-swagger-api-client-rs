/* 
 * MBTA
 *
 * MBTA service API. https://www.mbta.com Source code: https://github.com/mbta/api
 *
 * OpenAPI spec version: 3.0
 * Contact: developer@mbta.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ShapeResourceRelationships {
  #[serde(rename = "stops")]
  stops: Option<::models::ShapeResourceRelationshipsStops>,
  #[serde(rename = "route")]
  route: Option<::models::ShapeResourceRelationshipsRoute>
}

impl ShapeResourceRelationships {
  pub fn new() -> ShapeResourceRelationships {
    ShapeResourceRelationships {
      stops: None,
      route: None
    }
  }

  pub fn set_stops(&mut self, stops: ::models::ShapeResourceRelationshipsStops) {
    self.stops = Some(stops);
  }

  pub fn with_stops(mut self, stops: ::models::ShapeResourceRelationshipsStops) -> ShapeResourceRelationships {
    self.stops = Some(stops);
    self
  }

  pub fn stops(&self) -> Option<&::models::ShapeResourceRelationshipsStops> {
    self.stops.as_ref()
  }

  pub fn reset_stops(&mut self) {
    self.stops = None;
  }

  pub fn set_route(&mut self, route: ::models::ShapeResourceRelationshipsRoute) {
    self.route = Some(route);
  }

  pub fn with_route(mut self, route: ::models::ShapeResourceRelationshipsRoute) -> ShapeResourceRelationships {
    self.route = Some(route);
    self
  }

  pub fn route(&self) -> Option<&::models::ShapeResourceRelationshipsRoute> {
    self.route.as_ref()
  }

  pub fn reset_route(&mut self) {
    self.route = None;
  }

}



