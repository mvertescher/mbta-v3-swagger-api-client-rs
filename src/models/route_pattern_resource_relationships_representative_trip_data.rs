/* 
 * MBTA
 *
 * MBTA service API. https://www.mbta.com Source code: https://github.com/mbta/api
 *
 * OpenAPI spec version: 3.0
 * Contact: developer@mbta.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RoutePatternResourceRelationshipsRepresentativeTripData {
  /// Type of related representative_trip resource
  #[serde(rename = "type")]
  _type: Option<String>,
  /// Related representative_trip resource id
  #[serde(rename = "id")]
  id: Option<String>
}

impl RoutePatternResourceRelationshipsRepresentativeTripData {
  pub fn new() -> RoutePatternResourceRelationshipsRepresentativeTripData {
    RoutePatternResourceRelationshipsRepresentativeTripData {
      _type: None,
      id: None
    }
  }

  pub fn set__type(&mut self, _type: String) {
    self._type = Some(_type);
  }

  pub fn with__type(mut self, _type: String) -> RoutePatternResourceRelationshipsRepresentativeTripData {
    self._type = Some(_type);
    self
  }

  pub fn _type(&self) -> Option<&String> {
    self._type.as_ref()
  }

  pub fn reset__type(&mut self) {
    self._type = None;
  }

  pub fn set_id(&mut self, id: String) {
    self.id = Some(id);
  }

  pub fn with_id(mut self, id: String) -> RoutePatternResourceRelationshipsRepresentativeTripData {
    self.id = Some(id);
    self
  }

  pub fn id(&self) -> Option<&String> {
    self.id.as_ref()
  }

  pub fn reset_id(&mut self) {
    self.id = None;
  }

}



